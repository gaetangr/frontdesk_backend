{"version":3,"sources":["pages/pages/Chat.js","pages/pages/WorkspaceContent.js","pages/pages/Workspace.js"],"names":["Divider","styled","MuiBreadcrumbs","spacing","MuiDivider","ChatContainer","MuiTextField","Grid","props","theme","palette","divider","div","position","Typography","Avatar","highlighted","secondary","main","action","hover","common","white","text","primary","shadows","typography","fontWeightBold","Badge","sidebar","footer","online","background","ChatWindow","useState","comments","setComments","comments1","setComments1","displayComments","a","axios","method","url","FRONTDESK_API","headers","Authorization","TOKEN","reponse","data","useEffect","commentCard","map","msg","content","container","component","Card","Chat","Fragment","my","useStyles","makeStyles","root","display","margin","orange","color","getContrastText","deepOrange","backgroundColor","purple","deepPurple","green","blue","small","width","height","MuiCard","WorkspaceContent","string","React","expanded","classes","mb","progress","CardContent","Box","justify","item","category","xl","status","pinned","CardActions","align","CardHeader","avatar","className","name","slice","IconButton","aria-label","title","subheader","created","gutterBottom","message","mt","ml","Button","onClick","linkDone","size","Link","linkPinned","linkDelete","Collapse","in","timeout","unmountOnExit","DoneChip","Chip","PinnedChip","Workspace","items","setItems","user","setUser","open","setOpen","handleClose","displayNotebook","loading","setLoading","setCategory","value","then","response","schema","yup","shape","TextField","required","min","max","methods","useForm","resolver","yupResolver","valueSearch","setValueSearch","Date","selectedDate","setSelectedDate","handleSubmit","register","errors","control","refreshApi","reset","time","LinearProgress","variant","setTimeout","onSubmit","workspace","author","id","is_done","is_pinned","catch","error","workspaceForm","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","as","multiline","rows","autoFocus","helperText","label","placeholder","fullWidth","defaultValue","utils","DateFnsUtils","format","onChange","date","KeyboardButtonProps","DialogActions","workspaceCard","username","charAt","toUpperCase","username_title","dates","edit","rightSidebar","Style","RoomService","style","marginRight","Build","AutocompleteField","Autocomplete","options","event","newValue","groupBy","option","getOptionLabel","openOnFocus","noOptionsText","openText","freeSolo","clearText","params","inputValue","matches","match","parts","parse","part","index","fontWeight","highlight","Helmet","xs","lg"],"mappings":"8ZA+BMA,GAFcC,YAAOC,KAAV,wEAAGD,CAAuBE,KAE3BF,YAAOG,KAAV,oEAAGH,CAAmBE,MAI7BE,GAFYJ,YAAOK,KAAV,sEAAGL,CAAqBE,KAEjBF,YAAOM,KAAV,0EAAGN,CAAH,8BAKCA,YAAOM,KAAV,wEAAGN,CAAH,iCACW,SAACO,GAAD,OAAWA,EAAMC,MAAMC,QAAQC,WAG1CV,YAAOM,KAAV,qEAAGN,CAAH,MAEOA,IAAOW,IAAV,yEAAGX,CAAH,iDAKEA,IAAOW,IAAV,wEAAGX,CAAH,iCAED,SAACO,GAAD,OAAWA,EAAMK,YAGRZ,IAAOW,IAAV,6EAAGX,CAAH,2BAIEA,YAAOa,KAAV,4EAAGb,CAAH,mCAKKA,YAAOc,KAAV,+EAAGd,CAAH,uFAKL,SAACO,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,MAGvBF,IAAOW,IAAV,+EAAGX,CAAH,8HAGP,SAACO,GAAD,OACZA,EAAMQ,YACFR,EAAMC,MAAMC,QAAQO,UAAUC,KAC9BV,EAAMC,MAAMC,QAAQS,OAAOC,SACxB,SAACZ,GAAD,OACPA,EAAMQ,YACFR,EAAMC,MAAMC,QAAQW,OAAOC,MAC3Bd,EAAMC,MAAMC,QAAQa,KAAKC,WAEpB,SAAChB,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,MACzB,SAACK,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,MAC9C,SAACK,GAAD,OAAWA,EAAMC,MAAMgB,QAAQ,MAGLxB,YAAOa,KAAV,mFAAGb,CAAH,sBACV,SAACO,GAAD,OAAWA,EAAMC,MAAMiB,WAAWC,kBAGjC1B,YAAOM,KAAV,uEAAGN,CAAH,oCAEF,SAACO,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,MAG7BF,YAAO2B,KAAV,oEAAG3B,CAAH,oHACM,SAACO,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,MAEzB,SAACK,GAAD,OAClBA,EAAMC,MAAMoB,QAAQC,OAAOC,OAAOC,cACd,SAACxB,GAAD,OAAWA,EAAMC,MAAMC,QAAQW,OAAOC,SAgChE,SAASW,IAAc,IAAD,EAEYC,mBAAS,IAFrB,mBAEbC,EAFa,KAEHC,EAFG,OAGcF,mBAAS,IAHvB,mBAGbG,EAHa,KAGFC,EAHE,KAIdC,EAAe,uCAAG,4BAAAC,EAAA,sEACAC,IAAM,CAC1BC,OAAQ,MACRC,IAAI,GAAD,OAAKC,IAAL,aACHC,QAAS,CACPC,cAAc,SAAD,OAAWC,QALN,OAChBC,EADgB,OAQtBZ,EAAYY,EAAQC,MARE,2CAAH,qDAWrBC,qBAAU,WAERX,MAEC,IAELW,qBAAU,WAERZ,EAAaH,KACZ,CAACA,IAIF,IAAMgB,EAAcd,EAAUe,KAAI,SAACC,GAAD,OAAU,6BAAKA,EAAIC,aACrD,OACE,cAACjD,EAAD,CAAekD,WAAS,EAACC,UAAWC,IAApC,SACEN,IAkBSO,MAbf,WACE,OACE,eAAC,IAAMC,SAAP,WAIE,cAAC,EAAD,CAASC,GAAI,IAEb,cAAC3B,EAAD,Q,qHCxHN,IAAM4B,EAAYC,aAAW,SAACrD,GAAD,MAAY,CACvCsD,KAAM,CACJC,QAAS,OACT,QAAS,CACPC,OAAQxD,EAAMN,QAAQ,KAG1B+D,OAAQ,CACNC,MAAO1D,EAAMC,QAAQ0D,gBAAgBC,IAAW,MAChDC,gBAAiBD,IAAW,MAE9BE,OAAQ,CACNJ,MAAO1D,EAAMC,QAAQ0D,gBAAgBI,IAAW,MAChDF,gBAAiBE,IAAW,MAE9BC,MAAO,CACLN,MAAO1D,EAAMC,QAAQ0D,gBAAgBK,IAAM,MAC3CH,gBAAiBG,IAAM,MAEzBC,KAAM,CACJP,MAAO1D,EAAMC,QAAQ0D,gBAAgBM,IAAK,MAC1CJ,gBAAiBI,IAAK,MAGxBC,MAAO,CACLC,MAAOnE,EAAMN,QAAQ,GACrB0E,OAAQpE,EAAMN,QAAQ,QAGpBsD,EAAOxD,YAAO6E,KAAV,6EAAG7E,CAAgBE,KACvBH,EAAUC,YAAOG,KAAV,gFAAGH,CAAmBE,KA+GpB4E,OAvGf,SAA0BvE,GAAQ,IA9CbwE,EA8CY,EACPC,IAAM/C,UAAS,GADR,gCAEC+C,IAAM/C,UAAS,IAFhB,mBAExBgD,EAFwB,aAGDhD,mBAAS,KAHR,gCAILA,mBAAS,YAJJ,mBAuBzBiD,GAvByB,UAuBftB,KAChB,OACE,eAAC,EAAD,CAAMuB,GAAI,EAAV,UACE5E,EAAM6E,SACN,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKvB,QAAQ,OAAb,UACE,cAACzD,EAAA,EAAD,CAAMgD,WAAS,EAACiC,QAAQ,aAAxB,SACE,cAACjF,EAAA,EAAD,CAAMkF,MAAI,EAAV,SAAYjF,EAAMkF,aAIpB,eAACnF,EAAA,EAAD,CAAMgD,WAAS,EAACiC,QAAQ,WAAxB,UACE,eAACjF,EAAA,EAAD,CAAMkF,MAAI,EAACE,GAAG,OAAd,UACG,IACAnF,EAAMoF,OACNpF,EAAMqF,UAET,cAACC,EAAA,EAAD,CAAaC,MAAM,gBAIvB,cAACC,EAAA,EAAD,CACEC,OACE,cAAClF,EAAA,EAAD,CAAQmF,UAAWf,EAAQZ,OAA3B,UA5FSS,EA6FMxE,EAAM2F,KA5FxBnB,EAAOoB,MAAM,EAAG,MA+FfjF,OAAQ,cAACkF,EAAA,EAAD,CAAYC,aAAW,aAC/BC,MAAK,UAAK/F,EAAM2F,KAAX,cAAqB3F,EAAM+F,OAChCC,UAAWhG,EAAMiG,UAGnB,cAAC,EAAD,CAASrB,GAAI,IAGb,cAACtE,EAAA,EAAD,CAAY4F,cAAY,EAAxB,SAA0BlG,EAAMmG,aAIlC,eAACpB,EAAA,EAAD,CAAKqB,GAAI,EAAGC,GAAI,EAAGzB,GAAI,EAAGpB,QAAQ,OAAlC,UACE,cAACzD,EAAA,EAAD,CAAMgD,WAAS,EAACiC,QAAQ,aAAxB,SACE,eAACjF,EAAA,EAAD,CAAMkF,MAAI,EAAV,UACG,IAED,cAACqB,EAAA,EAAD,CAAQC,QAASvG,EAAMwG,SAAUC,KAAK,QAAQ9C,MAAM,YAApD,SACE,cAAC+C,EAAA,EAAD,mCAEF,cAACJ,EAAA,EAAD,CAAQC,QAASvG,EAAM2G,WAAYF,KAAK,QAAQ9C,MAAM,YAAtD,2BAOJ,eAAC5D,EAAA,EAAD,CAAMgD,WAAS,EAACiC,QAAQ,WAAxB,UACE,eAACjF,EAAA,EAAD,CAAMkF,MAAI,EAACE,GAAG,OAAd,UACG,IAID,cAACmB,EAAA,EAAD,CAAQC,QAASvG,EAAM4G,WAAYH,KAAK,QAAQ9C,MAAM,YAAtD,SACE,cAAC+C,EAAA,EAAD,6BAGJ,cAACpB,EAAA,EAAD,CAAaC,MAAM,eAGvB,cAACsB,EAAA,EAAD,CAAUC,GAAIpC,EAAUqC,QAAQ,OAAOC,eAAa,EAApD,SACE,cAAClC,EAAA,EAAD,UACE,cAACxE,EAAA,EAAD,UACE,cAAC,EAAD,c,uICxGZ,IAAM2G,GAAWxH,YAAOyH,MAAV,sEAAGzH,CAAH,uLACQwE,IAAM,MAEjB,SAACjE,GAAD,OAAWA,EAAMC,MAAMC,QAAQW,OAAOC,SAS7B,SAACd,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,UAC9B,SAACK,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,UAI9CwH,GAAa1H,YAAOyH,MAAV,wEAAGzH,CAAH,uLACMiE,KAAO,MAElB,SAAC1D,GAAD,OAAWA,EAAMC,MAAMC,QAAQW,OAAOC,SAS7B,SAACd,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,UAC9B,SAACK,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,UAmD9CH,IA/CeC,YAAOyH,MAAV,0EAAGzH,CAAH,uLACIyE,IAAK,MAEhB,SAAClE,GAAD,OAAWA,EAAMC,MAAMC,QAAQW,OAAOC,SAS7B,SAACd,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,UAC9B,SAACK,GAAD,OAAWA,EAAMC,MAAMN,QAAQ,UAIlC2D,aAAW,SAACrD,GAAD,MAAY,CACvCsD,KAAM,CACJC,QAAS,OACT,QAAS,CACPC,OAAQxD,EAAMN,QAAQ,KAG1B+D,OAAQ,CACNC,MAAO1D,EAAMC,QAAQ0D,gBAAgBC,IAAW,MAChDC,gBAAiBD,IAAW,MAE9BE,OAAQ,CACNJ,MAAO1D,EAAMC,QAAQ0D,gBAAgBI,IAAW,MAChDF,gBAAiBE,IAAW,MAE9BC,MAAO,CACLN,MAAO1D,EAAMC,QAAQ0D,gBAAgBK,IAAM,MAC3CH,gBAAiBG,IAAM,MAEzBC,KAAM,CACJP,MAAO1D,EAAMC,QAAQ0D,gBAAgBM,IAAK,MAC1CJ,gBAAiBI,IAAK,MAGxBC,MAAO,CACLC,MAAOnE,EAAMN,QAAQ,GACrB0E,OAAQpE,EAAMN,QAAQ,QAGbF,YAAO6E,KAAV,kEAAG7E,CAAgBE,KACbF,YAAOG,KAAV,qEAAGH,CAAmBE,MACfF,YAAOC,KAAV,yEAAGD,CAAuBE,KAsb5ByH,UApbf,WAAsB,IAAD,QACO1F,mBAAS,IADhB,mBACZ2F,EADY,KACLC,EADK,OAEK5F,mBAAS,IAFd,mBAEZ6F,EAFY,KAENC,EAFM,OAGO9F,qBAHP,gCAIK+C,IAAM/C,UAAS,IAJpB,mBAIZ+F,EAJY,KAINC,EAJM,KAMbC,EAAc,WAClBD,GAAQ,IAuBJE,EAAe,uCAAG,4BAAA5F,EAAA,sEACAC,IAAM,CAC1BC,OAAQ,MACRC,IAAI,GAAD,OAAKC,IAAL,mBACHC,QAAS,CACPC,cAAc,SAAD,OAAWC,QALN,OAChBC,EADgB,OAQtB8E,EAAS9E,EAAQC,MARK,2CAAH,qDA9BF,EAsDWf,mBAAS,IAtDpB,mBAsDZmG,EAtDY,KAsDHC,EAtDG,OAwDapG,mBAAS,QAxDtB,mBAwDZwD,EAxDY,KAwDF6C,EAxDE,OAyDOtD,IAAM/C,SAAS,IAzDtB,mBAyDZsG,EAzDY,UA8DnBtF,qBAAU,WACRkF,IArBA3F,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKC,IAAL,WACHC,QAAS,CACPC,cAAc,SAAD,OAAWC,QAEzB0F,MAAK,SAACC,GACPV,EAAQU,EAASzF,KAAK,SAkBvB,IAEH,IAAM0F,EAASC,MAAaC,MAAM,CAChCC,UAAWF,MAERG,SAAS,iCACTC,IAAI,EAAG,eACPC,IAAI,OAGHC,GAAUC,YAAQ,CACtBC,SAAUC,sBAAYV,KA9EL,GAiFmB1D,IAAM/C,SAAS,IAjFlC,qBAiFZoH,GAjFY,MAiFCC,GAjFD,SAkFqBtE,IAAM/C,SAC5C,IAAIsH,KAAK,eAnFQ,qBAkFZC,GAlFY,MAkFEC,GAlFF,MAqFDC,IAAyCT,GAAnDU,SAAmDV,GAAzCS,cAAcE,GAA2BX,GAA3BW,OAAQC,GAAmBZ,GAAnBY,QAGlCC,IAHqDb,GAAVc,MAG9B,WAAgB,IAAfC,EAAc,uDAAT,IACxB3B,EAAW,cAAC4B,GAAA,EAAD,CAAgBC,QAAQ,WACjCC,YAAW,WACT9B,EAAW,IACXF,MACC6B,KAGAI,GAAW,SAACpH,GAEhBR,IAAM,CACJC,OAAQ,OACRC,IAAI,GAAD,OAAKC,IAAL,qBACHK,KAAM,CACJqH,UAAWvC,EAAKuC,UAChBC,OAAQxC,EAAKyC,GACblH,QAASL,EAAK6F,UACd2B,SAAS,EACTC,WAAW,EACXhF,SAAUA,GAGZ7C,QAAS,CACPC,cAAc,SAAD,OAAWC,QAGzB0F,KACCP,GAAQ,GACT6B,GAAW,MACXY,OAAM,SAACC,GACFA,EAAMlC,aAyCVmC,GACJ,eAACC,GAAA,EAAD,CACE7C,KAAMA,EACN8C,QAAS5C,EACT6C,kBAAgB,oBAHlB,UAKE,cAACC,GAAA,EAAD,CAAaT,GAAG,oBAAhB,iCACA,eAACU,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,IAEA,uBAAMd,SAAUV,GAAaU,IAA7B,UAEE,cAAC,IAAD,CACEe,GACE,cAACtC,EAAA,EAAD,CACEuC,WAAS,EACTC,KAAM,EACNC,WAAW,EACX/C,MAAM,GACNoC,QAAOf,GAAOf,UACd0C,WAAU,UAAE3B,GAAOf,iBAAT,aAAE,EAAkBnC,QAC9BwD,QAAQ,WACRsB,MAAM,iBACNC,YAAY,yBACZC,WAAS,IAGbxF,KAAK,YACL2D,QAASA,GACT8B,aAAa,KAGf,cAAC,IAAD,CACER,GACE,cAAC,KAAD,CAAyBS,MAAOC,IAAhC,SACE,cAAC,KAAD,CACE7H,OAAO,SACPuG,GAAG,qBACHiB,MAAM,yBACNM,OAAO,aACPvD,MAAOiB,GACPuC,SA9IS,SAACC,GACxBvC,GAAgBuC,IA8IFC,oBAAqB,CACnB,aAAc,mBAKtB/F,KAAK,OACL2D,QAASA,GACT8B,aAAa,QAGjB,eAACO,GAAA,EAAD,WACE,eAACrF,EAAA,EAAD,CAAQC,QAASoB,EAAahE,MAAM,UAApC,oBAEGqE,KAEH,eAAC1B,EAAA,EAAD,CAAQC,QAAS4C,GAAaU,IAAWlG,MAAM,UAA/C,gCAEGqE,cAOL4D,GAAgBvE,EAAMzE,KAAI,SAACC,GAC/B,GACEA,EAAIqC,UAAJ,UAAmBA,GAEnB,OACE,cAAC,GAAD,CAEES,MAhVqBnB,EAgVO3B,EAAIgJ,SA/UjCrH,EAAOsH,OAAO,GAAGC,cAAgBvH,EAAOoB,MAAM,IAgV7CG,MAAOlD,EAAImJ,eAEX5G,OAAuB,GAAfvC,EAAIoH,QAAkB,cAAChD,GAAD,CAAUgE,MAAM,SAAY,GAC1D5F,OAAyB,GAAjBxC,EAAIqH,UAAoB,cAAC/C,GAAD,CAAY8D,MAAM,cAAiB,GACnE9E,QAAStD,EAAIC,QACbmD,QAASpD,EAAIoJ,MACbrF,WAAY,WAnHL,IAACoD,IAoHGnH,EAAImH,GAnHvB/H,IAAM,CACJC,OAAQ,SACRC,IAAI,GAAD,OAAKC,IAAL,qBAA+B4H,EAA/B,KACH3H,QAAS,CACPC,cAAc,SAAD,OAAWC,QAEzB0F,KAAKsB,GAAW,OA+GX/C,SAAU,WA/FH,IAACwD,IAgGCnH,EAAImH,GA/FnB/H,IAAM,CACJC,OAAQ,QACRC,IAAI,GAAD,OAAKC,IAAL,qBAA+B4H,EAA/B,KACH3H,QAAS,CACPC,cAAc,SAAD,OAAWC,MAE1BE,KAAM,CAAEwH,SAAS,KAChBhC,KAAKsB,GAAW,OA0Fb5C,WAAY,WA/GH,IAACqD,IAgHCnH,EAAImH,GA/GrB/H,IAAM,CACJC,OAAQ,QACRC,IAAI,GAAD,OAAKC,IAAL,qBAA+B4H,EAA/B,KACH3H,QAAS,CACPC,cAAc,SAAD,OAAWC,MAE1BE,KAAM,CAAEyH,WAAW,KAClBjC,KAAKsB,GAAW,OA0Gb2C,KAAK,MAdArJ,EAAImH,IAlVnB,IAA+BxF,KAwWvB2H,GACJ,qBAAIC,MAAM,wBAAV,UACG,IAED,6BACE,eAAC9F,EAAA,EAAD,CACEC,QAAS,WACPwB,EAAY,SAEd4B,QAAQ,YACRhG,MAAM,UALR,UAOE,cAAC0I,GAAA,EAAD,CAAaC,MAAO,CAAEC,YAAa,KAPrC,oBAYF,6BACE,eAACjG,EAAA,EAAD,CAEEC,QAAS,WACPwB,EAAY,gBAEd4B,QAAQ,YACRhG,MAAM,UANR,UAQE,cAAC6I,GAAA,EAAD,CAAOF,MAAO,CAAEC,YAAa,KAR/B,sBAcAE,GACJ,cAACC,GAAA,GAAD,GACE1C,GAAG,kBACH2C,QAAStF,EACTW,MAAOc,GACP0C,SAAU,SAACoB,EAAOC,GAChB9D,GAAe8D,IAEjBC,QAAS,SAACC,GAAD,OAAYA,EAAOd,OAC5Be,eAAgB,SAACD,GAAD,OAAYA,EAAOd,OACnCgB,YAAY,QACZC,cAAc,uBACdC,SAAS,iBACTC,UAAU,EACVC,UAAU,mBAbZ,gCAckB,SAACN,GAAD,OAAYA,EAAOjK,WAdrC,2DAgBe,SAACwK,GAAD,OACX,cAAChF,EAAA,EAAD,2BACMgF,GADN,IAEErC,MAAM,wBACNtB,QAAQ,iBApBd,8BAuBgB,SAACoD,EAAD,GAA6B,IAAlBQ,EAAiB,EAAjBA,WACjBC,EAAUC,IAAMV,EAAOjK,QAASyK,GAChCG,EAAQC,IAAMZ,EAAOjK,QAAS0K,GAEpC,OACE,8BACGE,EAAM9K,KAAI,SAACgL,EAAMC,GAAP,OACT,sBAEEvB,MAAO,CAAEwB,WAAYF,EAAKG,UAAY,IAAM,IAAKjK,gBAAiBI,IAAK,MAFzE,SAIG0J,EAAK7M,KAAK6E,MAAM,EAAG,MAHfiI,WA/BjB,IA0CF,OACE,eAAC,IAAM1K,SAAP,WACE,cAAC6K,EAAA,EAAD,CAAQjI,MAAM,sBAEbsE,GAED,cAAC/J,EAAA,EAAD,CAAYqJ,QAAQ,KAAKzD,cAAY,EAAC1C,QAAQ,SAA9C,SACE,cAACzD,EAAA,EAAD,CAAMgD,WAAS,EAACpD,QAAS,EAAzB,SACE,cAACI,EAAA,EAAD,CAAMkF,MAAI,EAACgJ,GAAI,EAAGC,GAAI,EAAtB,SACe,QAAZhJ,EACG,sBACY,eAAZA,EACA,0BACA,iBAQV,cAAC,GAAD,CAAS9B,GAAI,IAEb,eAACrD,EAAA,EAAD,CAAMgD,WAAS,EAACpD,QAAS,EAAzB,UACE,eAACI,EAAA,EAAD,CAAMkF,MAAI,EAACgJ,GAAI,GAAIC,GAAI,GAAvB,UACE,sBAAMrE,SAAUV,GAAaU,IAA7B,SAEE,cAAC,IAAD,CACEe,GACE,cAACtC,EAAA,EAAD,CACEuC,WAAS,EACTC,KAAM,EACNC,WAAW,EACX/C,MAAM,GACNoC,QAAOf,GAAOf,UACd0C,WAAU,UAAE3B,GAAOf,iBAAT,aAAE,EAAkBnC,QAC9BwD,QAAQ,WACRsB,MAAM,iBACNC,YAAY,yBACZC,WAAS,IAGbxF,KAAK,YACL2D,QAASA,GACT8B,aAAa,OAyBjB,eAAC9E,EAAA,EAAD,CACE6E,WAAS,EACTxB,QAAQ,YACRpD,QAAS4C,GAAaU,IACtBlG,MAAM,UAJR,gCAOGqE,KAEFH,EACD,uBACA,uBACA,uBAEC4E,GAED,uBACiB,OAAhB3D,GACC,cAAChE,EAAA,EAAD,UAAcgE,GAAYhG,UAE1B,GAID8I,MAIAO","file":"static/js/30.bf906e3c.chunk.js","sourcesContent":["\r\nimport { FRONTDESK_API, TOKEN } from \"../../constants/\";\r\nimport React, { isValidElement, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Badge,\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  TextField as MuiTextField,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Avatar,\r\n  Fab,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Divider as MuiDivider,\r\n  Link,\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst TextField = styled(MuiTextField)(spacing);\r\n\r\nconst ChatContainer = styled(Grid)`\r\n  width: 120%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ChatSidebar = styled(Grid)`\r\n  border-right: 1px solid ${(props) => props.theme.palette.divider};\r\n`;\r\n\r\nconst ChatMain = styled(Grid)``;\r\n\r\nconst ChatMessages = styled.div`\r\n  overflow-y: scroll;\r\n  height: calc(65vh - 94px);\r\n`;\r\n\r\nconst ChatMessage = styled.div`\r\n  margin: 30px;\r\n  text-align: ${(props) => props.position};\r\n`;\r\n\r\nconst ChatMessageInner = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst ChatMessageTime = styled(Typography)`\r\n  text-align: right;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst ChatMessageAvatar = styled(Avatar)`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 34px;\r\n  height: 34px;\r\n  margin-right: ${(props) => props.theme.spacing(2)}px;\r\n`;\r\n\r\nconst ChatMessageBubble = styled.div`\r\n  display: inline-block;\r\n  margin-right: auto;\r\n  background: ${(props) =>\r\n    props.highlighted\r\n      ? props.theme.palette.secondary.main\r\n      : props.theme.palette.action.hover};\r\n  color: ${(props) =>\r\n    props.highlighted\r\n      ? props.theme.palette.common.white\r\n      : props.theme.palette.text.primary};\r\n  border-radius: 3px;\r\n  padding: ${(props) => props.theme.spacing(2)}px;\r\n  margin-bottom: ${(props) => props.theme.spacing(1)}px;\r\n  ${(props) => props.theme.shadows[1]};\r\n`;\r\n\r\nconst ChatMessageBubbleName = styled(Typography)`\r\n  font-weight: ${(props) => props.theme.typography.fontWeightBold};\r\n`;\r\n\r\nconst ChatInput = styled(Grid)`\r\n  min-height: 94px;\r\n  padding: ${(props) => props.theme.spacing(5)}px;\r\n`;\r\n\r\nconst Online = styled(Badge)`\r\n  margin-right: ${(props) => props.theme.spacing(1)}px;\r\n  span {\r\n    background-color: ${(props) =>\r\n      props.theme.sidebar.footer.online.background};\r\n    border: 1.5px solid ${(props) => props.theme.palette.common.white};\r\n    height: 12px;\r\n    width: 12px;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nfunction ChatMessageComponent({\r\n  name,\r\n  message,\r\n  time,\r\n  avatar,\r\n  position = \"left\",\r\n}) {\r\n  return (\r\n    <ChatMessage position={position}>\r\n      <ChatMessageInner>\r\n       \r\n        <ChatMessageBubble highlighted={position === \"right\"}>\r\n          <Box>\r\n            <ChatMessageBubbleName variant=\"body1\">\r\n              {name}\r\n            </ChatMessageBubbleName>\r\n          </Box>\r\n          <Typography variant=\"body2\">{message}</Typography>\r\n        </ChatMessageBubble>\r\n        <ChatMessageTime variant=\"body2\">{time}</ChatMessageTime>\r\n      </ChatMessageInner>\r\n    </ChatMessage>\r\n  );\r\n}\r\n\r\nfunction ChatWindow() {\r\n\r\n  const [comments, setComments] = useState([])\r\n  const [comments1, setComments1] = useState([]);\r\n  const displayComments = async () => {\r\n    const reponse = await axios({\r\n      method: \"get\",\r\n      url: `${FRONTDESK_API}/comment/`,\r\n      headers: {\r\n        Authorization: `Token ${TOKEN}`,\r\n      },\r\n    });\r\n    setComments(reponse.data);\r\n  }; \r\n\r\n  useEffect(() => {\r\n    \r\n    displayComments()\r\n \r\n  }, []);\r\n\r\nuseEffect(() => {\r\n\r\n  setComments1(comments);\r\n}, [comments]);\r\n\r\n\r\n  \r\n  const commentCard = comments1.map((msg) => (<li>{msg.content}</li>))\r\n  return (\r\n    <ChatContainer container component={Card}>\r\n     {commentCard}\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nfunction Chat() {\r\n  return (\r\n    <React.Fragment>\r\n  \r\n     \r\n\r\n      <Divider my={6} />\r\n\r\n      <ChatWindow />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","/**\n * Display the workspace and notebooks for collaborators\n * The form logic and all components related to the workspace\n * should be contain in this file\n */\nimport { FRONTDESK_API, TOKEN } from \"../../constants/\";\nimport React, { isValidElement, useEffect, useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Chat from \"./Chat\"\nimport Box from \"@material-ui/core/Box\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {\n  deepOrange,\n  deepPurple,\n  indigo,\n  blue,\n  green,\n  orange,\n} from \"@material-ui/core/colors\";\nimport {\n  CardContent,\n  CardActions,\n  CardHeader,\n  Chip,\n  IconButton,\n  Button,\n  Grid,\n  Paper,\n  Tooltip,\n  Link,\n  Breadcrumbs as MuiBreadcrumbs,\n  Card as MuiCard,\n  Divider as MuiDivider,\n  Typography,\n} from \"@material-ui/core\";\nimport { spacing, width } from \"@material-ui/system\";\nimport axios from \"axios\";\n\n/**\n * Returns the first letter of the username.\n *\n * @param {string} string The string to be parsed.\n */\nfunction FirstLetter(string) {\n  return string.slice(0, 2);\n}\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  green: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n  },\n  blue: {\n    color: theme.palette.getContrastText(blue[500]),\n    backgroundColor: blue[500],\n  },\n\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\nconst Card = styled(MuiCard)(spacing);\nconst Divider = styled(MuiDivider)(spacing);\n\n// Components\n//------------------------------\n\n/**\n * Return a workspace content with props\n */\nfunction WorkspaceContent(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expanded, setExpanded] = React.useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"success\");\n  const handleClickOpen = (msg, severity) => {\n   \n    setMessage(msg);\n    setOpen(true);\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n\n  const classes = useStyles();\n  return (\n    <Card mb={6}>\n     {props.progress}\n      <CardContent>\n        <Box display=\"flex\">\n          <Grid container justify=\"flex-start\">\n            <Grid item>{props.category}</Grid>\n          </Grid>\n\n          {/* Actions - Actions if user == request.user such as edit or delete */}\n          <Grid container justify=\"flex-end\">\n            <Grid item xl=\"auto\">\n              {\" \"}\n              {props.status}\n              {props.pinned}\n            </Grid>\n            <CardActions align=\"right\"></CardActions>\n          </Grid>\n        </Box>\n        {/* Header - Author info, date, status */}\n        <CardHeader\n          avatar={\n            <Avatar className={classes.purple}>\n              {FirstLetter(props.name)}\n            </Avatar>\n          }\n          action={<IconButton aria-label=\"settings\"></IconButton>}\n          title={`${props.name} - ${props.title}`}\n          subheader={props.created}\n        />\n\n        <Divider mb={3} />\n\n        {/* Content - Message content */}\n        <Typography gutterBottom>{props.message}</Typography>\n      </CardContent>\n\n      {/* Actions - Actions for the user such as add comment, mark as done etc */}\n      <Box mt={4} ml={4} mb={3} display=\"flex\">\n        <Grid container justify=\"flex-start\">\n          <Grid item>\n            {\" \"}\n            \n            <Button onClick={props.linkDone} size=\"small\" color=\"secondary\">\n              <Link>Marquer comme fait</Link>\n            </Button>\n            <Button onClick={props.linkPinned} size=\"small\" color=\"secondary\">\n              Epingler\n            </Button>\n          </Grid>\n        </Grid>\n\n        {/* Actions - Actions if user == request.user such as edit or delete */}\n        <Grid container justify=\"flex-end\">\n          <Grid item xl=\"auto\">\n            {\" \"}\n            {/* <Button onClick={props.edit} size=\"small\" color=\"primary\">\n              <Link>Editer</Link>\n            </Button> */}\n            <Button onClick={props.linkDelete} size=\"small\" color=\"secondary\">\n              <Link>Supprimer</Link>\n            </Button>\n          </Grid>\n          <CardActions align=\"left\"></CardActions>\n        </Grid>\n      </Box>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography>\n            <Chat />\n          </Typography>\n        </CardContent>\n      </Collapse>\n     \n    </Card>\n  );\n}\n\n\nexport default WorkspaceContent;\n","/**\r\n * Display the workspace and notebooks for collaborators\r\n * The form logic and all components related to the workspace\r\n * should be contain in this file\r\n */\r\nimport { FRONTDESK_API, TOKEN } from \"../../constants/\";\r\nimport React, { isValidElement, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Helmet from \"react-helmet\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport WorkspaceContent from \"./WorkspaceContent\";\r\n\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport {\r\n  Loop,\r\n  Group,\r\n  Build,\r\n  SingleBed,\r\n  GroupWork,\r\n  RoomService,\r\n} from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n  deepOrange,\r\n  deepPurple,\r\n  indigo,\r\n  blue,\r\n  green,\r\n  orange,\r\n} from \"@material-ui/core/colors\";\r\nimport {\r\n  CardContent,\r\n  Chip,\r\n  Button,\r\n  Grid,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Card as MuiCard,\r\n  Divider as MuiDivider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport axios from \"axios\";\r\nimport { Bell } from \"react-feather\";\r\n\r\n// Custom functions\r\n//------------------------------\r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n/**\r\n * Returns the first letter of the username.\r\n *\r\n * @param {string} string The string to be parsed.\r\n */\r\nfunction FirstLetter(string) {\r\n  return string.slice(0, 2);\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n// Custom constants\r\n//------------------------------\r\nconst DoneChip = styled(Chip)`\r\n  background-color: ${green[700]};\r\n  border-radius: 5px;\r\n  color: ${(props) => props.theme.palette.common.white};\r\n  font-size: 12px;\r\n  height: 18px;\r\n  float: right;\r\n  margin-left: 2px;\r\n  margin-top: 3px;\r\n  padding: 3px 0;\r\n\r\n  span {\r\n    padding-left: ${(props) => props.theme.spacing(1.375)}px;\r\n    padding-right: ${(props) => props.theme.spacing(1.375)}px;\r\n  }\r\n`;\r\n\r\nconst PinnedChip = styled(Chip)`\r\n  background-color: ${orange[700]};\r\n  border-radius: 5px;\r\n  color: ${(props) => props.theme.palette.common.white};\r\n  font-size: 12px;\r\n  height: 18px;\r\n  float: right;\r\n  margin-left: 2px;\r\n  margin-top: 3px;\r\n  padding: 3px 0;\r\n\r\n  span {\r\n    padding-left: ${(props) => props.theme.spacing(1.375)}px;\r\n    padding-right: ${(props) => props.theme.spacing(1.375)}px;\r\n  }\r\n`;\r\n\r\nconst CategoryChip = styled(Chip)`\r\n  background-color: ${blue[700]};\r\n  border-radius: 5px;\r\n  color: ${(props) => props.theme.palette.common.white};\r\n  font-size: 12px;\r\n  height: 18px;\r\n  float: right;\r\n  margin-left: 2px;\r\n  margin-top: 3px;\r\n  padding: 3px 0;\r\n\r\n  span {\r\n    padding-left: ${(props) => props.theme.spacing(1.375)}px;\r\n    padding-right: ${(props) => props.theme.spacing(1.375)}px;\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n  green: {\r\n    color: theme.palette.getContrastText(green[500]),\r\n    backgroundColor: green[500],\r\n  },\r\n  blue: {\r\n    color: theme.palette.getContrastText(blue[500]),\r\n    backgroundColor: blue[500],\r\n  },\r\n\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\nconst Card = styled(MuiCard)(spacing);\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nfunction Workspace() {\r\n  const [items, setItems] = useState([]);\r\n  const [user, setUser] = useState([]);\r\n  const [error, setError] = useState();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const displayComment = async () => {\r\n    const reponse = await axios({\r\n      method: \"get\",\r\n      url: `${FRONTDESK_API}/comment/`,\r\n      headers: {\r\n        Authorization: `Token ${TOKEN}`,\r\n      },\r\n    });\r\n    setItems(reponse.data);\r\n  };\r\n\r\n\r\n  const displayNotebook = async () => {\r\n    const reponse = await axios({\r\n      method: \"get\",\r\n      url: `${FRONTDESK_API}/notebook/list/`,\r\n      headers: {\r\n        Authorization: `Token ${TOKEN}`,\r\n      },\r\n    });\r\n    setItems(reponse.data);\r\n  };\r\n\r\n  function getUser() {\r\n    axios({\r\n      method: \"get\",\r\n      url: `${FRONTDESK_API}/users/`,\r\n      headers: {\r\n        Authorization: `Token ${TOKEN}`,\r\n      },\r\n    }).then((response) => {\r\n      setUser(response.data[0]);\r\n   \r\n    });\r\n  }\r\n\r\n  const [loading, setLoading] = useState(\"\");\r\n  \r\n  const [category, setCategory] = useState(\"tous\");\r\n  const [value, setValue] = React.useState(\"\");\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    displayNotebook();\r\n\r\n    getUser();\r\n\r\n  }, []);\r\n\r\n  const schema = yup.object().shape({\r\n    TextField: yup\r\n      .string()\r\n      .required(\"Vous n'avez rien renseigné\")\r\n      .min(1, \"Trop court \")\r\n      .max(1000),\r\n  });\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const options = [\"Option 1\", \"Option 2\"];\r\n  const [valueSearch, setValueSearch] = React.useState(\"\");\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"2021-02-11\")\r\n  );\r\n  const { register, handleSubmit, errors, control, reset } = methods;\r\n\r\n\r\n  const refreshApi = (time=2000) => {\r\n   setLoading(<LinearProgress variant=\"query\" />),\r\n     setTimeout(() => {\r\n       setLoading(\"\");\r\n       displayNotebook();\r\n     }, time);\r\n}\r\n\r\n  const onSubmit = (data) => {\r\n \r\n    axios({\r\n      method: \"post\",\r\n      url: `${FRONTDESK_API}/notebook/create/`,\r\n      data: {\r\n        workspace: user.workspace,\r\n        author: user.id,\r\n        content: data.TextField,\r\n        is_done: false,\r\n        is_pinned: false,\r\n        category: category,\r\n       \r\n      },\r\n      headers: {\r\n        Authorization: `Token ${TOKEN}`,\r\n      },\r\n    })\r\n      .then(\r\n        setOpen(false),\r\n       refreshApi(2000))\r\n      .catch((error) => {\r\n        if (error.response) {\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n\r\nconst onDelete = (id) => {\r\n  axios({\r\n    method: \"delete\",\r\n    url: `${FRONTDESK_API}/notebook/${id}/`,\r\n    headers: {\r\n      Authorization: `Token ${TOKEN}`,\r\n    },\r\n  }).then(refreshApi(2000));\r\n};\r\n\r\n  const onPinned = (id) => {\r\n    axios({\r\n      method: \"patch\",\r\n      url: `${FRONTDESK_API}/notebook/${id}/`,\r\n      headers: {\r\n        Authorization: `Token ${TOKEN}`,\r\n      },\r\n      data: { is_pinned: true },\r\n    }).then(refreshApi(1000));\r\n  };\r\n\r\n  \r\n\r\n  const onDone = (id) => {\r\n    axios({\r\n      method: \"patch\",\r\n      url: `${FRONTDESK_API}/notebook/${id}/`,\r\n      headers: {\r\n        Authorization: `Token ${TOKEN}`,\r\n      },\r\n      data: { is_done: true },\r\n    }).then(refreshApi(1000));\r\n  };\r\n\r\n  const workspaceForm = (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">Ajouter la consigne</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText></DialogContentText>\r\n\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          {/* Option 1: pass a component to the Controller. */}\r\n          <Controller\r\n            as={\r\n              <TextField\r\n                multiline\r\n                rows={4}\r\n                autoFocus={true}\r\n                value=\"\"\r\n                error={errors.TextField ? true : false}\r\n                helperText={errors.TextField?.message}\r\n                variant=\"outlined\"\r\n                label=\"Votre consigne\"\r\n                placeholder=\"Ajouter votre consigne\"\r\n                fullWidth\r\n              />\r\n            }\r\n            name=\"TextField\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n          />\r\n\r\n          <Controller\r\n            as={\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Programmer la consigne\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={selectedDate}\r\n                  onChange={handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            }\r\n            name=\"Date\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n          />\r\n        </form>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Annuler\r\n            {value}\r\n          </Button>\r\n          <Button onClick={handleSubmit(onSubmit)} color=\"primary\">\r\n            Ajouter la consigne\r\n            {value}\r\n          </Button>\r\n        </DialogActions>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n\r\n  const workspaceCard = items.map((msg) => {\r\n    if (\r\n      msg.category == `${category}`\r\n    )\r\n      return (\r\n        <WorkspaceContent\r\n          \r\n          name={capitalizeFirstLetter(msg.username)}\r\n          title={msg.username_title}\r\n          key={msg.id}\r\n          status={msg.is_done == true ? <DoneChip label=\"Fait\" /> : \"\"}\r\n          pinned={msg.is_pinned == true ? <PinnedChip label=\"Important\" /> : \"\"}\r\n          message={msg.content}\r\n          created={msg.dates}\r\n          linkDelete={() => {\r\n            onDelete(msg.id);\r\n          }}\r\n          linkDone={() => {\r\n            onDone(msg.id);\r\n          }}\r\n          linkPinned={() => {\r\n            onPinned(msg.id);\r\n          }}\r\n          edit=\"dd\"\r\n        />\r\n      );\r\n  });\r\n\r\n\r\n\r\n\r\n  const rightSidebar = (\r\n    <li Style=\"list-style-type:none;\">\r\n      {\" \"}\r\n     \r\n      <ul>\r\n        <Button\r\n          onClick={() => {\r\n            setCategory(\"tous\");\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          <RoomService style={{ marginRight: 8 }} />\r\n          Réception\r\n        </Button>\r\n      </ul>\r\n     \r\n      <ul>\r\n        <Button\r\n   \r\n          onClick={() => {\r\n            setCategory(\"maintenance\");\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          <Build style={{ marginRight: 8 }} />\r\n          Maintenance\r\n        </Button>\r\n      </ul>\r\n    </li>\r\n  );\r\n  const AutocompleteField = (\r\n    <Autocomplete\r\n      id=\"highlights-demo\"\r\n      options={items}\r\n      value={valueSearch}\r\n      onChange={(event, newValue) => {\r\n        setValueSearch(newValue);\r\n      }}\r\n      groupBy={(option) => option.dates}\r\n      getOptionLabel={(option) => option.dates}\r\n      openOnFocus=\"false\"\r\n      noOptionsText=\"Consigne introuvable\"\r\n      openText=\"Trier par date\"\r\n      freeSolo={false}\r\n      clearText=\"Supprimer texte\"\r\n      getOptionLabel={(option) => option.content}\r\n      fullWidth\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Chercher une consigne\"\r\n          variant=\"outlined\"\r\n        />\r\n      )}\r\n      renderOption={(option, { inputValue }) => {\r\n        const matches = match(option.content, inputValue);\r\n        const parts = parse(option.content, matches);\r\n\r\n        return (\r\n          <div>\r\n            {parts.map((part, index) => (\r\n              <span\r\n                key={index}\r\n                style={{ fontWeight: part.highlight ? 900 : 400, backgroundColor: blue[100]}}\r\n              >\r\n                {part.text.slice(0, 100)}\r\n              </span>\r\n            ))}\r\n          </div>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Espace de travail\" />\r\n\r\n      {workspaceForm}\r\n\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        <Grid container spacing={6}>\r\n          <Grid item xs={8} lg={8}>\r\n            {category == \"tous\"\r\n              ? \"Cahier de consignes\"\r\n              : category == \"maintenance\"\r\n              ? \"Registre de maintenance\"\r\n              : \"Étage\"}\r\n          </Grid>\r\n\r\n          {/* Action right side */}\r\n     \r\n        </Grid>\r\n      </Typography>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} lg={10}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Option 1: pass a component to the Controller. */}\r\n            <Controller\r\n              as={\r\n                <TextField\r\n                  multiline\r\n                  rows={4}\r\n                  autoFocus={true}\r\n                  value=\"\"\r\n                  error={errors.TextField ? true : false}\r\n                  helperText={errors.TextField?.message}\r\n                  variant=\"outlined\"\r\n                  label=\"Votre consigne\"\r\n                  placeholder=\"Ajouter votre consigne\"\r\n                  fullWidth\r\n                />\r\n              }\r\n              name=\"TextField\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n            />\r\n\r\n            {/*  <Controller\r\n              as={\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-dialog\"\r\n                    label=\"Programmer la consigne\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              }\r\n              name=\"Date\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n            /> */}\r\n          </form>\r\n\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            onClick={handleSubmit(onSubmit)}\r\n            color=\"primary\"\r\n          >\r\n            Ajouter la consigne\r\n            {value}\r\n          </Button>\r\n          {loading}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          {/* Autocomplete form */}\r\n          {AutocompleteField}\r\n\r\n          <br />\r\n          {valueSearch !== null ? (\r\n            <CardContent>{valueSearch.content}</CardContent>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {/* Autocomplete form */}\r\n          {workspaceCard}\r\n        </Grid>\r\n       \r\n          {/* Autocomplete form */}\r\n          {rightSidebar}\r\n     \r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Workspace;\r\n"],"sourceRoot":""}