{"version":3,"sources":["pages/docs/DashboardManager.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["Divider","styled","MuiDivider","spacing","Typography","MuiBreadcrumbs","MuiTypography","Introduction","mb","variant","gutterBottom","my","LearnMore","mt","DashboardManager","Fragment","title","container","justify","item","xs","lg","xl","display","createSvgIcon","React","d","withStyles","theme","root","marginLeft","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect"],"mappings":"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","file":"static/js/24.0baa5ddf.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { Helmet } from \"react-helmet\";\n\nimport {\n  Box,\n  Breadcrumbs as MuiBreadcrumbs,\n  Divider as MuiDivider,\n  Grid,\n  Link,\n  Typography as MuiTypography,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { spacing } from \"@material-ui/system\";\n\nconst Divider = styled(MuiDivider)(spacing);\n\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\n\nconst Typography = styled(MuiTypography)(spacing);\n\nfunction Introduction() {\n  return (\n    <Box mb={10}>\n      <Typography variant=\"h3\" gutterBottom>\n        Introduction\n      </Typography>\n\n      <Typography variant=\"subtitle1\" gutterBottom>\n        L'espace manager est un tableau de bord qui vous permet de gérer votre\n        établissement et votre équipe en toute simplicité.\n        \n      </Typography>\n\n      <Typography variant=\"subtitle1\" gutterBottom my={4}>\n        Pour accéder à l'espace manager, assurez-vous de remplir les conditions\n        suivantes:\n        <ul>\n          <li>Vous avez enregistré votre établissement sur Front Desk</li>\n          <li>Votre compte dispose des droits nécessaires (statut d'équipe ou administrateur)</li>\n        </ul>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction LearnMore() {\n  return (\n    <Box mb={10}>\n      <Typography variant=\"h3\" gutterBottom>\n        Outils à votre disposition\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        {\" \"}\n        Le tableau de bord vous donne accès à des outils de gestion et de\n        communication exclusifs, selon votre abonnement vous pouvez utiliser les\n        outils suivants\n      </Typography>\n\n      <Typography variant=\"subtitle1\">\n        {\" \"}\n        En tant que propriétaire vous pouvez désigner d'autres collaborateurs\n        comme manager, ces derniers pourront ainsi accéder aux mêmes\n        priviléges cités plus haut à l'exception de la modification et la\n        suppression de votre propriété.\n      </Typography>\n\n      <Divider mt={3} mb={3} />\n      <Typography variant=\"h4\" gutterBottom>\n        Gestion de votre établissement\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        {\" \"}\n        En accédant à la gestion de votre établissement vous pouvez modifier ses informations, mais également certaines préférences.\n              L'établissement vous donne également accès à la modification de l'information du jour, cet contenu sera affiché sur un encart dans le tableau de bord de tous les utilisateurs\n      </Typography>\n      <Divider mt={3} mb={3} />\n      <Typography variant=\"h4\" gutterBottom>\n        Gestion de votre équipe\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        {\" \"}\n        Vous pouvez ajouter, modifier ou supprimer des utilisateurs très\n        facilement, le tableau des utilisateurs indique le status de\n        l'utilisateur, ses informations et son status. Vous pouvez changer leur\n        mot de passe, désactiver leur compte temporairement, ou le supprimer.\n      </Typography>\n\n      <Divider mt={3} mb={3} />\n      <Typography variant=\"h4\" gutterBottom>\n        Gestion des notifications et messages\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        {\" \"}\n        Il est parfois nécessaire de communiquer une information à toute\n        l'équipe ou un utilisateur en particulier, avec la gestion des\n        notifications et message vous avez la possibilité d'envoyer un message\n        privé à certains utilisateurs, ces derniers la recevront en direct.\n      </Typography>\n\n      <Divider mt={3} mb={3} />\n      <Typography variant=\"h4\" gutterBottom>\n        Gestion des documents\n      </Typography>\n      <Typography variant=\"subtitle1\">\n        {\" \"}\n        Vous pouvez ajouter des documents, checklists et plannings facilement\n        dans les sections appropriées, ces derniers se retrouveront sur le\n        tableau de bord de votre équipe. Vous avez la possibilité d'ajouter un\n        texte descriptif si besoin.\n      </Typography>\n    </Box>\n  );\n}\n\nfunction DashboardManager() {\n  return (\n    <React.Fragment>\n      <Helmet title=\"Compte propriétaire\" />\n\n      <Grid container spacing={6} justify=\"center\">\n        <Grid item xs={12} lg={9} xl={7}>\n          <Typography variant=\"h2\" gutterBottom display=\"inline\">\n            Espace manager\n          </Typography>\n\n          <Divider my={6} />\n\n          <Introduction />\n\n          <LearnMore />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default DashboardManager;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"],"sourceRoot":""}