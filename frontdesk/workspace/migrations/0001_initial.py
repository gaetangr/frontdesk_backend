# Generated by Django 3.0.11 on 2021-02-15 13:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('properties', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('property', models.OneToOneField(help_text='Property related to the current workspace', on_delete=django.db.models.deletion.CASCADE, related_name='workspace', to='properties.Property', verbose_name='Établissement')),
            ],
            options={
                'verbose_name': 'Espace de travail',
                'verbose_name_plural': 'Espaces de travail',
            },
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(choices=[('tous', 'Tous'), ('maintenance', 'Maintenance'), ('etage', 'Étage')], default='tous', help_text='Catégories utilisées pour filtrer et associer des consignes et messages', max_length=20, verbose_name='Catégorie')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Contenu du message')),
                ('is_done', models.BooleanField(default=False, help_text='Si la case est cochée, le message est considéré comme fait et affiche un label sur le contenu', verbose_name='Fait')),
                ('is_pinned', models.BooleanField(default=False, help_text='Si la case est cochée, le message est considéré comme épinglé et affiche un label sur le contenu', verbose_name='Épinglé')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='Auteur')),
                ('tag_user', models.ManyToManyField(blank=True, help_text='Les utilisateurs selectionnés recevront une notification', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateurs taggués')),
                ('workspace', models.ForeignKey(help_text='Workspace is linked to a property, the workspace is where users exchange informations', on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='workspace.Workspace', verbose_name='Espace de travail')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Contenu')),
                ('author', models.ForeignKey(help_text="L'auteur qui sera associé au commentaire", null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Auteur')),
                ('notebook', models.ForeignKey(help_text='Le message associé au commentaire que vous ajouter ou ', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='workspace.Notebook', verbose_name='Message')),
            ],
            options={
                'verbose_name': 'Commentaire',
                'verbose_name_plural': 'Commentaires',
            },
        ),
    ]
